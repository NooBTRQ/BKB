// raft 集群间rpc协议

syntax = "proto3";
option go_package ="./;rpcProto";
package rpcProto;

service election {

  rpc RequestVote (VoteReq) returns (VoteRes) {}
}

service replicate {
  rpc AppendEntries (AppendEntriesReq) returns (AppendEntriesRes) {}
}

message VoteReq {
  int64 term = 1;
  int32 candidateId = 2;
  int64 lastLogIndex = 3;
  int64 lastLogTerm = 4;
}

message VoteRes {
  int64 term = 1;
  bool voteGranted = 2;
}

message AppendEntriesReq {
  int64 term=1;
  int32 leaderId=2;
  int64 prevLogTerm=3;
  int64 prevLogIndex=4;
  int64 leaderCommit=5;
  repeated logEntry entries =6;
}

message AppendEntriesRes {
  int64 term=1;
  bool success=2;
}

message logEntry {
  int64 term=1;
  int64 index=2;
  string key=3;
  string value=4;
  int64 operation=5;
}